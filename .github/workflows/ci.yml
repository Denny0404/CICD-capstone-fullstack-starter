name: CI

on:
  push:
    branches: [ "develop", "feature/**", "feat/**", "fix/**" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: appuser
          POSTGRES_PASSWORD: apppass
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U appuser -d appdb"
          --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install (root workspace)
        run: npm ci --workspaces --include-workspace-root --no-audit --no-fund

      - name: Lint (root)
        run: npm run lint

      - name: Build frontend
        run: npm --workspace frontend run build

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U appuser -d appdb; then exit 0; fi
            sleep 2
          done
          exit 1

      - name: Run backend tests (with coverage)
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_USER: appuser
          DB_PASSWORD: apppass
          DB_NAME: appdb
        run: npm --workspace @capstone/backend run test

      - name: Upload backend coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt/validate
        working-directory: infra/terraform
        run: |
          terraform fmt -check
          terraform init -input=false
          terraform validate
